
import mysql.connector
import logging
class Database:
    def __init__(self):
        self.conn = None
        self.cursor = None  # Kh·ªüi t·∫°o con tr·ªè nh∆∞ng ch∆∞a g√°n gi√° tr·ªã

    def connect(self):
        try:
            self.conn = mysql.connector.connect(
                host="localhost",
                user="root",
                password="",
                database="qldsv"
            )
            self.cursor = self.conn.cursor(dictionary=True)
            print("‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!")
            return self.conn  # ƒê·∫£m b·∫£o tr·∫£ v·ªÅ k·∫øt n·ªëi ƒë√£ kh·ªüi t·∫°o
        except mysql.connector.Error as e:
            logging.error("‚ùå L·ªói k·∫øt n·ªëi MySQL!", exc_info=True)
            self.conn = None  # ƒê·∫£m b·∫£o g√°n `None` n·∫øu c√≥ l·ªói
            self.cursor = None  # ƒê·∫£m b·∫£o `cursor` c≈©ng ƒë∆∞·ª£c reset n·∫øu c√≥ l·ªói

            return None

    def execute_query(self, query, values=None, commit=False):
        """Th·ª±c thi SELECT ho·∫∑c INSERT, UPDATE, DELETE"""
        conn = self.conn or self.connect()  # D√πng k·∫øt n·ªëi hi·ªán c√≥ ho·∫∑c t·∫°o m·ªõi
        if not conn:
            print("‚ùå Ch∆∞a k·∫øt n·ªëi ƒë·∫øn database!")
            return False

        try:
            cursor = conn.cursor(dictionary=True)
            cursor.execute(query, values or ())

            if commit:
                conn.commit()
                return True
            else:
                return cursor.fetchall()
        except mysql.connector.Error as e:
            logging.error(f"‚ùå L·ªói SQL: {e}", exc_info=True)
            return False if commit else []
        finally:
            if cursor:
                cursor.close()


    def execute_commit(self, query, params=None):
        conn = self.conn or self.connect()  # D√πng k·∫øt n·ªëi hi·ªán c√≥ ho·∫∑c t·∫°o m·ªõi
        if not conn:
            print("‚ùå Ch∆∞a k·∫øt n·ªëi ƒë·∫øn database!")
            return False

        try:
            cursor = conn.cursor(dictionary=True)  # L·∫•y con tr·ªè m·ªõi
            cursor.execute(query, params or ())
            conn.commit()
            return cursor.rowcount
        except mysql.connector.Error as e:
            logging.error("‚ùå L·ªói th·ª±c thi SQL!", exc_info=True)
            return False
        finally:
            if cursor:
                cursor.close()  # ƒê·∫£m b·∫£o ƒë√≥ng con tr·ªè sau khi d√πng

    def fetch_all(self, query, params=None):
        """Th·ª±c thi SELECT v√† tr·∫£ v·ªÅ danh s√°ch k·∫øt qu·∫£"""
        conn = self.conn or self.connect()  # D√πng k·∫øt n·ªëi hi·ªán c√≥ ho·∫∑c t·∫°o m·ªõi
        if not conn:
            print("‚ùå Ch∆∞a k·∫øt n·ªëi ƒë·∫øn database!")
            return []
        
        try:
            cursor = conn.cursor(dictionary=True)  # ƒê·∫£m b·∫£o d·ªØ li·ªáu tr·∫£ v·ªÅ d·∫°ng dictionary
            cursor.execute(query, params or ())
            result = cursor.fetchall()
            return result  # Tr·∫£ v·ªÅ danh s√°ch k·∫øt qu·∫£

        except mysql.connector.Error as err:
            print(f"‚ùå L·ªói l·∫•y d·ªØ li·ªáu: {err}")
            return []

        finally:
            if cursor:
                cursor.close()  # ƒê√≥ng con tr·ªè, nh∆∞ng gi·ªØ k·∫øt n·ªëi ƒë·ªÉ tr√°nh m·∫•t phi√™n l√†m vi·ªác

    def fetch_one(self, query, params=None):
        """Th·ª±c thi truy v·∫•n & l·∫•y m·ªôt k·∫øt qu·∫£."""
        conn = self.conn or self.connect()  # üî• ƒê·∫£m b·∫£o c√≥ k·∫øt n·ªëi
        if not conn or not self.cursor:  # üî• Ki·ªÉm tra n·∫øu cursor ch∆∞a kh·ªüi t·∫°o
            print("‚ùå Kh√¥ng th·ªÉ th·ª±c thi query: Cursor ho·∫∑c k·∫øt n·ªëi b·ªã None!")
            return None

        try:
            self.cursor.execute(query, params or ())
            return self.cursor.fetchone()
        except mysql.connector.Error as err:
            print(f"‚ùå L·ªói SQL: {err}")
            return None
        finally:
            if self.cursor:
                self.cursor.close() 
        
    def close(self):
        if self.conn:
            self.conn.close()
            print("‚úÖ ƒê√£ ƒë√≥ng k·∫øt n·ªëi database!")

