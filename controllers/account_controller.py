from models.account_models import AccountModels
from uuid import uuid4  # D√πng UUID ƒë·ªÉ t·∫°o m√£ ng∆∞·ªùi d√πng duy nh·∫•t

class AccountController:
    def __init__(self):
        self.account_models = AccountModels()

    def get_all_accounts(self):
        """L·∫•y danh s√°ch t·∫•t c·∫£ t√†i kho·∫£n"""
        return self.account_models.get_all_accounts()
    
    def lay_danh_sach_vai_tro(self):
        return self.account_models.lay_danh_sach_vai_tro()


    def add_account(self, ma_nguoi_dung, username, password, vai_tro):
        """Th√™m t√†i kho·∫£n m·ªõi"""
        
        # Ki·ªÉm tra n·∫øu m√£ ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá
        print(f"üîç Gi√° tr·ªã ƒë·∫ßu v√†o: {ma_nguoi_dung}")
        if not ma_nguoi_dung or ma_nguoi_dung == "0":
            print("‚ùå M√£ ng∆∞·ªùi d√πng kh√¥ng h·ª£p l·ªá! T·∫°o m√£ m·ªõi...")
            ma_nguoi_dung = str(uuid4())[:10]  # T·∫°o ID duy nh·∫•t

        # Ki·ªÉm tra n·∫øu t√†i kho·∫£n ƒë√£ t·ªìn t·∫°i
        existing_account = self.account_models.get_by_ma_nguoi_dung(ma_nguoi_dung)
        if existing_account:
            print("‚ùå M√£ ng∆∞·ªùi d√πng ƒë√£ t·ªìn t·∫°i! Vui l√≤ng nh·∫≠p m√£ kh√°c.")
            return False

        # G·ª≠i th√¥ng tin ƒë·∫øn model ƒë·ªÉ l∆∞u v√†o database
        self.account_models.add_account(ma_nguoi_dung, username, password, vai_tro)


    def update_account(self, ma_nguoi_dung, username, password, vai_tro):
        """C·∫≠p nh·∫≠t th√¥ng tin t√†i kho·∫£n"""
        self.account_models.update_account(ma_nguoi_dung, username, password, vai_tro)

    def delete_account(self, ma_nguoi_dung):
        """X√≥a t√†i kho·∫£n"""
        self.account_models.delete_account(ma_nguoi_dung)

    

    def get_logs(self):
        """L·∫•y danh s√°ch nh·∫≠t k√Ω ho·∫°t ƒë·ªông"""
        return self.account_models.get_logs()
